
#Experiment 4
#EDGE DETECTION
#UI Layout

BoxLayout:
    orientation: 'vertical'

    #row: 11
    #cols: 11

    GridLayout:
        cols: 10

        #row1
        #title
        Widget:
            Label:
                text: 'EDGE DETECTION'
                y: self.parent.y
                width: self.parent.width*10
                font_size:40
        #Underline
        Widget:
            id: separator
            canvas:
                Color:
                    rgb: 1,1,1
                Rectangle:
                    pos: self.parent.width*0.05,self.parent.height*0.92
                    size: self.parent.width*0.9,2
        #empty widgets
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        #Mainmenu Button
        Widget:
            Button:
                text: 'Main Menu'
                x: self.parent.x
                y: self.parent.y + self.parent.height*0.25
                #opens main menu when clicked
                on_press: app.main_menu()
                height: self.parent.height*0.5
                width:self.parent.width*0.75
                font_size: 20

        #row2
        #underline
        Widget:
            id: separator
            canvas:
                Color:
                    rgb: 1,1,1
                Rectangle:
                    pos: self.parent.width*(0.0125),self.parent.height*(0.825)
                    size: self.parent.width*0.275,2
        #Input Image button
        Widget:
            Button:
                x: self.parent.x
                y: self.parent.y
                width: self.parent.width*1
                height: self.parent.height*0.75
                text: 'Input Image'
                font_size: 20
                #show filechooser when clicked
                on_press: app.show_filechooser(mainimg,fcw,fchooser)
        Widget:
        Widget:
            #main image
            Image:
                y: self.parent.height*1.55
                x: self.parent.x
                id: mainimg
                source: 'noimg.png'
                width: self.parent.width*7
                height: self.parent.height*8.5
                allow_stretch: True
                keep_ratio: True
            #Inputfile selector
            Widget:
                y: self.parent.height*1.55
                x: self.parent.x
                width: self.parent.width*7
                height: self.parent.height*0
                id: fcw
                FileChooserIconView:
                    id:fchooser
                    y: self.parent.height*1.55
                    x: self.parent.x
                    width: self.parent.width
                    height: self.parent.height*1
                    #show preview of selected image
                    on_selection: app.show_selected_img(mainimg,fcw,fchooser,submitbtn,imgname);
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row3
        #Band value
        Label:
            text: 'Band Value'
        Widget:
        #input Bandvalue
        Widget:
            TextInput:
                height:self.parent.height*0.375
                width:self.parent.width*0.75
                x: self.parent.x + self.parent.height*0.125
                y: self.parent.y + self.parent.height*0.3125
                text: ''
                id: bandvalue
                input_filter: 'int'
                multiline:False
                hint_text: "No of Bands"
                fonst_size: 12
                #Set the max of R,G,B value to input Band value
                #when users hits enter
                on_text_validate: app.change_slider(rgbslider,bandvalue)
                #when  user focuses out of textbox
                on_focus: app.change_slider(rgbslider,bandvalue)
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row4
        #Select Edge Type
        Label:
            text: 'Select Edge Type'
        #radio button for edge type
        CheckBox:
            group:"radio_grp"
            #set edge type to sobel
            on_active:app.set_type("sobel")
            #sobel
        Label:
            text:"Sobel"
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row5
        Widget:
        #radio button for edge type
        CheckBox:
            group:"radio_grp"
            #set edge type to prewitt
            on_active:app.set_type("prewitt")
        #prewitt
        Label:
            text:"Prewitt"
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row6
        Widget:
        #radio button for edge type
        CheckBox:
            group:"radio_grp"
            #set edge type to canny
            on_active:app.set_type("canny")
        #canny
        Label:
            text:"Canny"
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row7
        Widget:
        #radio button for edge type
        CheckBox:
            group:"radio_grp"
            #set edge type to log
            on_active:app.set_type("log")
        #log
        Label:
            text:":Log"
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row7
        Widget:
        #radio button for edge type
        CheckBox:
            group:"radio_grp"
            #set edge type to roberts
            on_active:app.set_type("roberts")
        #roberts
        Label:
            text:"Roberts"
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row8
        #Threshold value
        Label:
            text: 'Threshold'
        #threshold slider
        Slider:
            range: (0,1)
            value: 0
            id: slider
            step: 0.01
            #display value in textbox
            on_value: tlabel.text = str(slider.value)
        #threshold input
        Widget:
            TextInput:
                height:self.parent.height*0.375
                width:self.parent.width*0.75
                x: self.parent.x + self.parent.height*0.125
                y: self.parent.y + self.parent.height*0.3125
                text: ''
                id: tlabel
                input_filter: 'float'
                multiline:False
                readonly: True
                hint_text: "NA"
                #update the value in slider
                #when users hits enter
                on_text_validate: app.Set_Slider(slider,tlabel)
                #when  user focuses out of textbox
                on_focus: app.Set_Slider(slider,tlabel)
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row9
        #Select Direction
        Label:
            text: 'Select Direction'
        #radio button for direction
        CheckBox:
            group:"d_group"
            #set direction to horizontal
            on_active:app.set_dir("horizontal")
        #horizontal
        Label:
            text:"Horizontal"
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row10
        Widget:
        #radio button for direction
        CheckBox:
            group:"d_group"
            #set direction to vertical
            on_active:app.set_dir("vertical")
        Label:
            text:"Vertical"
        #horizontal line below main image
        Widget:
            id: separator
            canvas:
                Color:
                    rgb: 1,1,1
                Rectangle:
                    pos: self.parent.width*(0.3125),self.parent.height*(0.1)
                    size: self.parent.width*0.675,2
        #display img name
        Widget:
            Label:
                x: self.parent.x
                y: self.parent.y + self.parent.height*0.5
                height: self.parent.height*0.5
                width: self.parent.width*5
                text: ''
                id: imgname
                font_size:25
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row 11
        #horizontal line above submit button
        Widget:
            id: separator
            canvas:
                Color:
                    rgb: 1,1,1
                Rectangle:
                    pos: self.parent.width*(0.0125),self.parent.height*(0.1)
                    size: self.parent.width*0.275,2
        Widget:
        #submit button
        Widget:
            Button:
                id: submitbtn
                x: self.parent.x*(0.5)
                y: self.parent.height*(0.125)
                width: self.parent.width*1
                height: self.parent.height*.75
                disabled: True
                text: 'Submit'
                font_size: 20
                #submit the form
                on_press: app.submit(rgbslider,slider,mainimg,img1,img2,img3,imgname)
        #horizontal image below main image
        Widget:
            id: separator
            canvas:
                Color:
                    rgb: 1,1,1
                Rectangle:
                    pos: self.parent.width*0.3,self.parent.height*0.025
                    size: 2,self.parent.height*0.85
        #output image1
        Widget:
            Button:
                background_color: (0,0,0,0)
                x: self.parent.x
                height: self.parent.height
                width:self.parent.width
                disabled: True
                #When this button is clicked,output image1 will be displayed in mainimg
                on_press: app.img_viewer (mainimg,img1,img2,img3)
                #show the image name when clicked
                on_press: imgname.text = str(img1.source)
            Image:
                x: self.parent.x
                y: self.parent.height*0.1
                source: 'noimg.png'
                opacity: 0.3
                height: self.parent.height*0.8
                width:self.parent.width
                allow_stretch: True
                keep_ratio: True
                id: img1
        Widget:
        #output image2
        Widget:
            Button:
                background_color: (0,0,0,0)
                on_press: print "2"
                x: self.parent.x
                height: self.parent.height
                width:self.parent.width
                disabled: True
                #When this button is clicked,output image2 will be displayed in mainimg
                on_press: app.img_viewer (mainimg,img2,img1,img3)
                #show the image name when clicked
                on_press: imgname.text = str(img2.source)
            Image:
                x: self.parent.x
                y: self.parent.height*0.1
                source: 'noimg.png'
                height: self.parent.height*0.8
                opacity: 0.3
                width:self.parent.width
                allow_stretch: True
                keep_ratio: True
                id: img2
        Widget:
        Widget
            Button:
                background_color: (0,0,0,0)
                on_press: print "3"
                x: self.parent.x
                height: self.parent.height
                width:self.parent.width
                disabled: True
                #When this button is clicked,output image3 will be displayed in mainimg
                on_press: app.img_viewer (mainimg,img3,img2,img1)
                #show the image name when clicked
                on_press: imgname.text = str(img3.source)
            Image:
                x: self.parent.x
                y: self.parent.height*0.1
                source: 'noimg.png'
                height: self.parent.height*0.8
                opacity: 0.3
                width:self.parent.width
                allow_stretch: True
                keep_ratio: True
                id: img3
