
#Experiment 5
#VIEWING IMAGES IN DIFFERENT FILTERS
#UI Layout

BoxLayout:
    orientation: 'vertical'

    #row: 13
    #cols: 12

    GridLayout:
        cols: 12

        #row1
        #title
        Widget:
            Label:
                text: 'VIEWING IMAGES IN DIFFERENT FILTERS'
                y: self.parent.y
                width: self.parent.width*12
                font_size:40
        #Underline
        Widget:
            iid: separator
            canvas:
                Color:
                    rgb: 1,1,1
                Rectangle:
                    pos: self.parent.width*0.05,self.parent.height*0.93
                    size: self.parent.width*0.9,2
        #empty widgets
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
		Widget:
        #Mainmenu Button
        Widget:
            Button:
                text: 'Main Menu'
                x: self.parent.x
                y: self.parent.y + self.parent.height*0.25
                #opens main menu when clicked
                on_press: app.main_menu()
                height: self.parent.height*0.5
                width:self.parent.width*0.75
                font_size: 20

        #row2
        #Input Image button
        Widget:
            Button:
                x: self.parent.x + self.parent.width*(1)
                y: self.parent.y
                width: self.parent.width*1
                height: self.parent.height*0.75
                text: 'Input Image'
                font_size: 20
                #show filechooser when clicked
                on_press: app.show_filechooser(mainimg,fcw,fchooser)
        #underline
        Widget:
            id: separator
            canvas:
                Color:
                    rgb: 1,1,1
                Rectangle:
                    pos: self.parent.width*(0.0125),self.parent.height*(0.8275)
                    size: self.parent.width*0.225,2
        Widget:
        #main image
        Widget:
            Image:
                y:  self.parent.height*1.55
                x: self.parent.x
                id: mainimg
                source: 'noimg.png'
                width: self.parent.width*9
                height: self.parent.height*9.5
                allow_stretch: True
                keep_ratio: True
            #Inputfile selector
            Widget:
                y:  self.parent.height*1.55
                x: self.parent.x
                width: self.parent.width*9
                height: self.parent.height*0
                id: fcw

                FileChooserIconView:
                    id:fchooser
                    y:  self.parent.height*1.55
                    x: self.parent.x
                    width: self.parent.width
                    height: self.parent.height*1
                    #show preview of selected image
                    on_selection: app.show_selected_img(mainimg,fcw,fchooser,submitbtn,imgname);
                    #enable band value if image is HDR
                    on_selection: enable_band(bandvalue,mainimg)
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row3
        #Band value
        Label:
            text: 'Band Value'
        #input Bandvalue
        Widget:
            TextInput:
                height:self.parent.height*0.375
                width:self.parent.width*0.75
                x: self.parent.x + self.parent.height*0.125
                y: self.parent.y + self.parent.height*0.3125

                text: ''
                id: bandvalue
                input_filter: 'int'
                multiline:False
                readonly: True
                hint_text: "NA"
                #Set the max of R,G,B value to input Band value
                #when users hits enter
                on_text_validate: app.set_max_rgb(bandvalue,s1,s2,s3,rvalue,gvalue,bvalue)
                #when  user focuses out of textbox
                on_focus: app.set_max_rgb(bandvalue,s1,s2,s3,rvalue,gvalue,bvalue)
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row4
        #R value
        Label:
            text: 'R Value'
        #R slider
        Slider:
            range: (1,3)
            value: 1
            id: s1
            width: self.parent.width
            step: 1
            #Display the value in textbox
            on_value: rvalue.text = str(s1.value)
        #R input value
        Widget:
            TextInput:
                height:self.parent.height*0.375
                width:self.parent.width*0.75
                x: self.parent.x + self.parent.height*0.125
                y: self.parent.y + self.parent.height*0.3125
                font_size: 12
                text: ''
                id: rvalue
                input_filter: 'int'
                hint_text: "1 - 3"
                multiline:False
                #update the value in slider
                #when users hits enter
                on_text_validate: app.focus(s1,rvalue)
                #when  user focuses out of textbox
                on_focus: app.focus(s1,rvalue)
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row5
        #G value
        Label:
            text: 'G Value'
        #G Slider
        Slider:
            range: (1,3)
            value: 1
            id: s2
            width: self.parent.width
            step: 1
            #display value in textbox
            on_value: gvalue.text = str(s2.value)
        #G input
        Widget:
            TextInput:
                height:self.parent.height*0.375
                width:self.parent.width*0.75
                x: self.parent.x + self.parent.height*0.125
                y: self.parent.y + self.parent.height*0.3125
                font_size: 12
                text: ''
                id: gvalue
                input_filter: 'int'
                hint_text: "1 - 3"
                multiline:False
                #update the value in slider
                #when users hits enter
                on_text_validate: s2.value = int(gvalue.text)
                #when  user focuses out of textbox
                on_focus: app.focus(s2,gvalue)
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row6
        #B value
        Label:
            text: 'B Value'
        Slider:
            range: (1,3)
            value: 1
            id: s3
            step: 1
            #display value in textbox
            on_value: bvalue.text = str(s3.value)
        #B input
        Widget:
            TextInput:
                height:self.parent.height*0.375
                width:self.parent.width*0.75
                x: self.parent.x + self.parent.height*0.125
                y: self.parent.y + self.parent.height*0.3125
                font_size: 12
                text: ''
                id: bvalue
                input_filter: 'int'
                hint_text: "1 - 3"
                multiline:False
                #update the value in slider
                #when users hits enter
                on_text_validate: s3.value = int(bvalue.text)
                #when  user focuses out of textbox
                on_focus: app.focus(s3,bvalue)
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row7
        #Filter Type
        Label:
            text: 'Filter Type'
        #radio button for Filter Type
        CheckBox:
            group:"filter_grp"
            #set filter type to Butterworth
            on_active:app.set_filter("Butterworth")
        #Butterworth
        Label:
            text: 'Butterworth'
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row8
        Widget:
		#radio button for Filter Type
        CheckBox:
            group:"filter_grp"
            #set filter type to Gaussian
            on_active:app.set_filter("Gaussian")
        #Gaussian
        Label:
            text: 'Gaussian'
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row9
        #pass type
        Label:
            text: 'Pass Type'
        #radio type for pass type
        CheckBox:
            group:"pass_grp"
            #set pass type to lowpass
            on_active:app.set_pass("lowpass")
        #lowpass
        Label:
            text: 'Lowpass'
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row10
        Widget:
        #radio type for pass type
        CheckBox:
            group:"pass_grp"
            #set pass type to highpass
            on_active:app.set_pass("highpass")
        #highpass
        Label:
            text: 'Highpass'
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row11
        #Cutoff
        Label:
            text: 'CutOff'
        #Cutoff slider
        Slider:
            range: (1,50)
            id: cf_val
            width: self.parent.width
            step: 1
            #display value in textbox
            on_value: cvalue.text = str(cf_val.value)
        #cutoff text input
        Widget:
            TextInput:
                height:self.parent.height*0.375
                width:self.parent.width*0.75
                x: self.parent.x + self.parent.height*0.125
                y: self.parent.y + self.parent.height*0.3125
                font_size:12
                text: ''
                id: cvalue
                input_filter: 'int'
                hint_text: "0.1 - 50"
                multiline:False
                #update the value in slider
                #when users hits enter
                on_text_validate: cf_val = int(cvalue.text)
                #when  user focuses out of textbox
                on_focus: app.focus(cf_val,cvalue)
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row12
        #order
        Label:
            text: 'Order'
        #order slider
        Slider:
            range: (1,50)
            value: 1
            id: or_val
            step: 1
            #display value in textbox
            on_value: ovalue.text = str(or_val.value)
        Widget:
            TextInput:
                height:self.parent.height*0.375
                width:self.parent.width*0.75
                x: self.parent.x + self.parent.height*0.125
                y: self.parent.y + self.parent.height*0.3125
                font_size:12
                text: ''
                id: ovalue
                input_filter: 'int'
                hint_text: "1 - 50"
                multiline:False
                #update the value in slider
                #when users hits enter
                on_text_validate: or_val = int(ovalue.text)
                #when  user focuses out of textbox
                on_focus: app.focus(or_val,ovalue)
        #horizontal line above submit button
        Widget:
            id: separator
            canvas:
                Color:
                    rgb: 1,1,1
                Rectangle:
                    pos: self.parent.width*(0.0125),self.parent.height*(0.095)
                    size: self.parent.width*0.225,2
        #horizontal line below main image
        Widget:
            id: separator
            canvas:
                Color:
                    rgb: 1,1,1
                Rectangle:
                    pos: self.parent.width*(0.275),self.parent.height*(0.09)
                    size: self.parent.width*0.7,2
        #display image name
        Widget:
            Label:
                x: self.parent.x
                y: self.parent.y + self.parent.height*0.25
                height: self.parent.height*0.5
                width: self.parent.width*5
                text: ''
                id: imgname
                font_size:25
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row13
        Widget:
        #submit button
        Widget:
            Button:
                id: submitbtn
                x: self.parent.x*(1)
                y: self.parent.height*(0.125)
                width: self.parent.width*1
                height: self.parent.height*.75
                disabled: True
                text: 'Submit'
                #submit the form
                on_press: app.submit(s1,s2,s3,mainimg,cf_val.value,or_val.value,img1,img2,img3,img4,img5,img6,img7,img8,img9,imgname,btnimg1,btnimg2,btnimg3,btnimg4,btnimg5,btnimg6,btnimg7,btnimg8)
        #vertical line between inputs and main image
        Widget:
            id: separator
            canvas:
                Color:
                    rgb: 1,1,1
                Rectangle:
                    pos: self.parent.width*0.25,self.parent.height*0.025
                    size: 2,self.parent.height*0.85
        #output image1
		Widget:
            Button:
                background_color: (0,0,0,0)
                x: self.parent.x
                id:btnimg1
                disabled: True
                height: self.parent.height
                width:self.parent.width
                #When this button is clicked,output image1 will be displayed in mainimg
                on_press: app.img_viewer(mainimg,img1,img2,img3,img4,img5,img6,img7,img8,img9)
                #show the image name when clicked
                on_press: imgname.text = str(img1.source)
            Image:
                x: self.parent.x
                y: self.parent.height*0.1
                source: 'noimg.png'
                opacity: 1
                height: self.parent.height*0.8
                width:self.parent.width
                allow_stretch: True
                keep_ratio: True
                id: img1
        #output image2
        Widget:
            Button:
                background_color: (0,0,0,0)
                on_press: print "2"
                x: self.parent.x
                id:btnimg2
                height: self.parent.height
                width:self.parent.width
                disabled: True
                #When this button is clicked,output image1 will be displayed in mainimg
                on_press: app.img_viewer(mainimg,img2,img1,img3,img4,img5,img6,img7,img8,img9)
                #show the image name when clicked
                on_press: imgname.text = str(img2.source)
            Image:
                x: self.parent.x
                y: self.parent.height*0.1
                source: 'noimg.png'
                height: self.parent.height*0.8
                opacity: 1
                width:self.parent.width
                allow_stretch: True
                keep_ratio: True
                id: img2
        #output image3
        Widget:
            Button:
                background_color: (0,0,0,0)
                on_press: print "3"
                id:btnimg3
                x: self.parent.x
                height: self.parent.height
                width:self.parent.width
                disabled: True
                #When this button is clicked,output image1 will be displayed in mainimg
                on_press: app.img_viewer(mainimg,img3,img2,img1,img4,img5,img6,img7,img8,img9)
                #show the image name when clicked
                on_press: imgname.text = str(img3.source)
            Image:
                x: self.parent.x
                y: self.parent.height*0.1
                source: 'noimg.png'
                height: self.parent.height*0.8
                opacity: 1
                width:self.parent.width
                allow_stretch: True
                keep_ratio: True
                id: img3
        #output image4
        Widget:
            Button:
                background_color: (0,0,0,0)
                x: self.parent.x
                id:btnimg4
                height: self.parent.height
                width:self.parent.width
                disabled: True
                #When this button is clicked,output image1 will be displayed in mainimg
                on_press: app.img_viewer(mainimg,img4,img2,img3,img1,img5,img6,img7,img8,img9)
                #show the image name when clicked
                on_press: imgname.text = str(img4.source)
            Image:
                x: self.parent.x
                y: self.parent.height*0.1
                source: 'noimg.png'
                opacity: 1
                height: self.parent.height*0.8
                width:self.parent.width
                allow_stretch: True
                keep_ratio: True
                id: img4
        #output image5
        Widget:
            Button:
                background_color: (0,0,0,0)
                x: self.parent.x
                id:btnimg5
                height: self.parent.height
                width:self.parent.width
                disabled: True
                #When this button is clicked,output image1 will be displayed in mainimg
                on_press: app.img_viewer(mainimg,img5,img2,img3,img4,img1,img6,img7,img8,img9)
                #show the image name when clicked
                on_press: imgname.text = str(img5.source)
            Image:
                x: self.parent.x
                y: self.parent.height*0.1
                source: 'noimg.png'
                height: self.parent.height*0.8
                opacity: 1
                width:self.parent.width
                allow_stretch: True
                keep_ratio: True
                id: img5
        #output image6
        Widget:
            Button:
                background_color: (0,0,0,0)
                x: self.parent.x
                id:btnimg6
                height: self.parent.height
                width:self.parent.width
                disabled: True
                #When this button is clicked,output image1 will be displayed in mainimg
                on_press: app.img_viewer(mainimg,img6,img2,img3,img4,img5,img1,img7,img8,img9)
                #show the image name when clicked
                on_press: imgname.text = str(img6.source)
            Image:
                x: self.parent.x
                y: self.parent.height*0.1
                source: 'noimg.png'
                height: self.parent.height*0.8
                opacity: 1
                width:self.parent.width
                allow_stretch: True
                keep_ratio: True
                id: img6
        #output image7
        Widget:
            Button:
                background_color: (0,0,0,0)
                x: self.parent.x
                id:btnimg7
                height: self.parent.height
                width:self.parent.width
                disabled: True
                #When this button is clicked,output image1 will be displayed in mainimg
                on_press: app.img_viewer(mainimg,img7,img2,img3,img4,img5,img6,img1,img8,img9)
                #show the image name when clicked
                on_press: imgname.text = str(img7.source)
            Image:
                x: self.parent.x
                y: self.parent.height*0.1
                source: 'noimg.png'
                opacity: 1
                height: self.parent.height*0.8
                width:self.parent.width
                allow_stretch: True
                keep_ratio: True
                id: img7
        #output image8
        Widget:
            Button:
                background_color: (0,0,0,0)
                x: self.parent.x
                id:btnimg8
                height: self.parent.height
                width:self.parent.width
                disabled: True
                #When this button is clicked,output image1 will be displayed in mainimg
                on_press: app.img_viewer(mainimg,img8,img2,img3,img4,img5,img6,img7,img1,img9)
                #show the image name when clicked
                on_press: imgname.text = str(img8.source)
            Image:
                x: self.parent.x
                y: self.parent.height*0.1
                source: 'noimg.png'
                height: self.parent.height*0.8
                opacity: 1
                width:self.parent.width
                allow_stretch: True
                keep_ratio: True
                id: img8
        #output image9
        Widget:
            Button:
                background_color: (0,0,0,0)
                x: self.parent.x
                id:btnimg9
                height: self.parent.height
                width:self.parent.width
                disabled: True
                #When this button is clicked,output image1 will be displayed in mainimg
                on_press: app.img_viewer(mainimg,img9,img2,img3,img4,img5,img6,img7,img8,img1)
                #show the image name when clicked
                on_press: imgname.text = str(img9.source)
            Image:
                x: self.parent.x
                y: self.parent.height*0.1
                source: 'noimg.png'
                height: self.parent.height*0.8
                opacity: 1
                width:self.parent.width
                allow_stretch: True
                keep_ratio: True
                id: img9
