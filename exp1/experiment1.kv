
#Experiment 1
#VIEWING IMAGES IN DIFFERENT BANDS
#UI layout

BoxLayout:
    orientation: 'vertical'

    #columns: 10
    #rows: 11

    GridLayout:
        cols: 10

        #row1
        #Title of exp
        Widget:
            Label:
                text: 'VIEWING IMAGES IN DIFFERENT BANDS'
                y: self.parent.y
                width: self.parent.width*10
                font_size: 40
                border: (0,0,0,16)
        #Underline
        Widget:
            id: separator
            canvas:
                Color:
                    rgb: 1,1,1
                Rectangle:
                    pos: self.parent.width*0.05,self.parent.height*0.9
                    size: self.parent.width*0.9,2
        #Empty widgets
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        #Mainmenu Button
        Widget:
            Button:
                text: 'Main Menu'
                x: self.parent.x
                y: self.parent.y + self.parent.height*0.25
                on_press: app.main_menu()
                height: self.parent.height*0.5
                width:self.parent.width*0.75
                font_size: 20

        #row2
        #Input Image button
        Widget:
            Button:
                x: self.parent.x + self.parent.width*1
                y: self.parent.y
                width: self.parent.width*1
                height: self.parent.height*.75
                text: 'Input Image'
                font_size: 20
                #show filechooser when clicked
                on_press: app.show_filechooser(mainimg,fcw,fchooser)
        #underline
        Widget:
            id: separator
            canvas:
                Color:
                    rgb: 1,1,1
                Rectangle:
                    pos: self.parent.width*0.05,self.parent.height*0.8
                    size: self.parent.width*0.2,2
        Widget:
        Widget:
            #Main image
            Image:
                y: self.parent.height*1.55
                x: self.parent.x
                id: mainimg
                source: 'noimg.png'
                width: self.parent.width*7
                height: self.parent.height*8
                allow_stretch: True
                keep_ratio: True
            #Inputfile selector
            Widget:
                x: self.parent.x
                y: self.parent.height*1.5
                width: self.parent.width*7
                height: self.parent.height*0
                id: fcw
                FileChooserIconView:
                    id:fchooser
                    y: self.parent.y
                    x: self.parent.x
                    width: self.parent.width
                    height: self.parent.height*1
                    #show preview of selected image
                    on_selection: app.show_selected_img(mainimg,fcw,fchooser,s4,s5,s6,s7,rstart,rend,cstart,cend,submitbtn,imgname)
                    #enable bandvalue if image is HDR
                    on_selection: app.enable_band(bandvalue,mainimg,submitbtn)
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row3
        #Band value
        Label:
            text: 'Band Value'
        #input Bandvalue
        Widget:
            TextInput:
                height:self.parent.height*0.375
                width:self.parent.width*0.75
                x: self.parent.x + self.parent.height*0.125
                y: self.parent.y + self.parent.height*0.3125
                text: ''
                id: bandvalue
                input_filter: 'int'
                multiline:False
                readonly: True
                hint_text: "NA"
                #Set the max of R,G,B value to input Band value
                #when users hits enter
                on_text_validate: app.set_max_rgb(bandvalue,s1,s2,s3,rvalue,gvalue,bvalue)
                #when  user focuses out of textbox
                on_focus: app.set_max_rgb(bandvalue,s1,s2,s3,rvalue,gvalue,bvalue)
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row4
        #R value
        Label:
            text: 'R Value'
        #R slider
        Slider:
            range: (1,3)
            value: 1
            id: s1
            width: self.parent.width
            step: 1
            #Display the value in textbox
            on_value: rvalue.text = str(s1.value)
        #R input value
        Widget:
            TextInput:
                height:self.parent.height*0.375
                width:self.parent.width*0.75
                x: self.parent.x + self.parent.height*0.125
                y: self.parent.y + self.parent.height*0.3125
                text: ''
                id: rvalue
                input_filter: 'int'
                hint_text: "1 - 3"
                multiline:False
                #update the value in slider
                #when users hits enter
                on_text_validate: app.change_slider(s1,rvalue)
                #when  user focuses out of textbox
                on_focus: app.change_slider(s1,rvalue)
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row5
        #G value
        Label:
            text: 'G Value'
        #G Slider
        Slider:
            range: (1,3)
            value: 1
            id: s2
            width: self.parent.width
            step: 1
            #display value in textbox
            on_value: gvalue.text = str(s2.value)
        #G input
        Widget:
            TextInput:
                height:self.parent.height*0.375
                width:self.parent.width*0.75
                x: self.parent.x + self.parent.height*0.125
                y: self.parent.y + self.parent.height*0.3125
                text: ''
                id: gvalue
                input_filter: 'int'
                hint_text: "1 - 3"
                multiline:False
                #update the value in slider
                #when users hits enter
                on_text_validate: s2.value = int(gvalue.text)
                #when  user focuses out of textbox
                on_focus: app.change_slider(s2,gvalue)
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row6
        #B value
        Label:
            text: 'B Value'
        #B Slider
        Slider:
            range: (1,3)
            value: 1
            id: s3
            step: 1
            #display value in textbox
            on_value: bvalue.text = str(s3.value)
        #B input
        Widget:
            TextInput:
                height:self.parent.height*0.375
                width:self.parent.width*0.75
                x: self.parent.x + self.parent.height*0.125
                y: self.parent.y + self.parent.height*0.3125
                text: ''
                id: bvalue
                input_filter: 'int'
                hint_text: "1 - 3"
                multiline:False
                #update the value in slider
                #when users hits enter
                on_text_validate: s3.value = int(bvalue.text)
                #when  user focuses out of textbox
                on_focus: app.change_slider(s3,bvalue)
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row7
        #row start
        Label:
            text: 'Row Start'
        #row start Slider
        Slider:
            range: (50,250)
            id: s4
            disabled: True
            step: 1
            #display value in textbox
            on_value: rstart.text = str(s4.value)
            #adjust the range of row end based on row start input
            on_value: app.adjust_end_value(s4,s5,rend)
        #row start input
        Widget:
            TextInput:
                height:self.parent.height*0.375
                width:self.parent.width*0.75
                x: self.parent.x + self.parent.height*0.125
                y: self.parent.y + self.parent.height*0.3125
                text: ''
                id: rstart
                input_filter: 'int'
                hint_text: "NA"
                multiline:False
                readonly: True
                #update the value in slider
                #when users hits enter
                on_text_validate: s4.value = int(rstart.text)
                #when  user focuses out of textbox
                on_focus: app.change_slider(s4,rstart)
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row8
        #row end
        Label:
            text: 'Row End'
        #row end slider
        Slider:
            range: (50,250)
            id: s5
            disabled: True
            step: 1
            #display value in textbox
            on_value: rend.text = str(s5.value)
        #row end input
        Widget:
            TextInput:
                height:self.parent.height*0.375
                width:self.parent.width*0.75
                x: self.parent.x + self.parent.height*0.125
                y: self.parent.y + self.parent.height*0.3125
                text: ''
                id: rend
                input_filter: 'int'
                hint_text: "NA"
                multiline:False
                readonly: True
                #update the value in slider
                #when users hits enter
                on_text_validate: s5.value = int(rend.text)
                #when  user focuses out of textbox
                on_focus: app.change_slider(s5,rend)
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row9
        #column start
        Label:
            text: 'Column Start'
        #cloumn start slider
        Slider:
            range: (50,250)
            id: s6
            step: 1
            disabled: True
            #display value in textbox
            on_value: cstart.text = str(s6.value)
            ##adjust the range of column end based oncolumn start input
            on_value: app.adjust_end_value(s6,s7,cend)
        #column start input
        Widget:
            TextInput:
                height:self.parent.height*0.375
                width:self.parent.width*0.75
                x: self.parent.x + self.parent.height*0.125
                y: self.parent.y + self.parent.height*0.3125
                text: ''
                id: cstart
                input_filter: 'int'
                hint_text: "NA"
                text_size: self.width, None
                multiline:False
                readonly: True
                #update the value in slider
                #when users hits enter
                on_text_validate: s6.value = int(cstart.text)
                #when  user focuses out of textbox
                on_focus: app.change_slider(s6,cstart)
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row10
        #colunn end
        Label:
            text: 'Column End'
        #column end slider
        Slider:
            range: (50,250)
            id: s7
            step: 1
            disabled: True
            #display value in textbox
            on_value: cend.text = str(s7.value)
        Widget:
            TextInput:
                height:self.parent.height*0.375
                width:self.parent.width*0.75
                x: self.parent.x + self.parent.height*0.125
                y: self.parent.y + self.parent.height*0.3125
                text: ''
                id: cend
                input_filter: 'int'
                hint_text: "NA"
                multiline:False
                readonly: True
                #update the value in slider
                #when users hits enter
                on_text_validate: s7.value = int(cend.text)
                #when  user focuses out of textbox
                on_focus: app.change_slider(s7,cend)
        #underline below mainimg
        Widget:
            id: separator
            canvas:
                Color:
                    rgb: 1,1,1
                Rectangle:
                    pos: self.parent.width*(0.3125),self.parent.height*(0.1)
                    size: self.parent.width*0.675,2
        #printing imgage name
        Widget:
            Label:
                x: self.parent.x
                y: self.parent.y
                height: self.parent.height*0.75
                width: self.parent.width*5
                text: ''
                id: imgname
                font_size:25

        Widget:
        Widget:
        Widget:
        Widget:
        Widget:

        #row11
        #underline below inputs
        Widget:
            id: separator
            canvas:
                Color:
                    rgb: 1,1,1
                Rectangle:
                    pos: self.parent.width*(0.05),self.parent.height*(0.1)
                    size: self.parent.width*0.2,2
        Widget:
        #submit button
        Widget:
            Button:
                id: submitbtn
                x: self.parent.x - self.parent.width*1
                y: self.parent.height*(0.125)
                width: self.parent.width*1
                height: self.parent.height*.75
                disabled: True
                text: 'Submit'
                font_size: 20
                #submit the form
                on_press: app.submit(s1,s2,s3,s4,s5,s6,s7,mainimg,img1,img2,img3,img4,img5,imgname,btnimg1,btnimg2,btnimg3,btnimg4,btnimg5)
        #vertical line between mainimg and inputs
        Widget:
            id: separator
            canvas:
                Color:
                    rgb: 1,1,1
                Rectangle:
                    pos: self.parent.width*0.3,self.parent.height*0.025
                    size: 2,self.parent.height*0.85
        #output image1
        Widget:
            Button:
                background_color: (0,0,0,0)
                on_press: app.img_viewer(mainimg,img1,img2,img3,img4,img5)
                x: self.parent.x
                height: self.parent.height
                width:self.parent.width
                id:btnimg1
                disabled: True
                #When this button is clicked,output image1 will be displayed in mainimg
                on_press: imgname.text = str(img1.source)
                #show the image name when clicked
                on_press: imgname.text = str(img1.source)
            Image:
                x: self.parent.x
                y: self.parent.height*0.1
                source: 'noimg.png'
                opacity: 1
                height: self.parent.height*0.8
                width:self.parent.width
                allow_stretch: True
                keep_ratio: True
                id: img1

        #output image2
        Widget
            Button:
                background_color: (0,0,0,0)
                x: self.parent.x
                id:btnimg2
                disabled: True
                height: self.parent.height
                width:self.parent.width
                #When this button is clicked,output image2 will be displayed in mainimg
                on_press: app.img_viewer(mainimg,img2,img1,img3,img4,img5)
                #show the image name when clicked
                on_press: imgname.text = str(img2.source)
            Image:
                x: self.parent.x
                y: self.parent.height*0.1
                source: 'noimg.png'
                height: self.parent.height*0.8
                opacity: 1
                width:self.parent.width
                allow_stretch: True
                keep_ratio: True
                id: img2

        #output image3
        Widget
            Button:
                background_color: (0,0,0,0)
                x: self.parent.x
                id:btnimg3
                disabled: True
                height: self.parent.height
                width:self.parent.width
                #When this button is clicked,output image1 will be displayed in mainimg
                on_press: app.img_viewer(mainimg,img3,img2,img1,img4,img5)
                #show the image name when clicked
                on_press: imgname.text = str(img3.source)
            Image:
                x: self.parent.x
                y: self.parent.height*0.1
                source: 'noimg.png'
                height: self.parent.height*0.8
                opacity: 1
                width:self.parent.width
                allow_stretch: True
                keep_ratio: True

                id: img3
        #output image4
        Widget
            Button:
                background_color: (0,0,0,0)
                x: self.parent.x
                height: self.parent.height
                width:self.parent.width
                id:btnimg4
                disabled: True
                #When this button is clicked,output image4 will be displayed in mainimg
                on_press: app.img_viewer(mainimg,img4,img2,img3,img1,img5)
                #show the image name when clicked
                on_press: imgname.text = str(img4.source)
            Image:
                x: self.parent.x
                y: self.parent.height*0.1
                source: 'noimg.png'
                opacity: 1
                height: self.parent.height*0.8
                width:self.parent.width
                allow_stretch: True
                keep_ratio: True

                id: img4
        #output image5
        Widget
            #When this button is clicked,output image5 will be displayed in mainimg
            Button:
                background_color: (0,0,0,0)
                x: self.parent.x
                id:btnimg5
                disabled: True
                height: self.parent.height
                width:self.parent.width
                #When this button is clicked,output image4 will be displayed in mainimg
                on_press: app.img_viewer(mainimg,img5,img2,img3,img4,img1)
                #show the image name when clicked
                on_press: imgname.text = str(img5.source)
            Image:
                x: self.parent.x
                y: self.parent.height*0.1
                source: 'noimg.png'
                height: self.parent.height*0.8
                width:self.parent.width
                opacity: 1
                allow_stretch: True
                keep_ratio: True
                id: img5
        Widget:
